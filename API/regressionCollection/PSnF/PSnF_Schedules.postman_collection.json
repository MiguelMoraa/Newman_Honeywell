{
	"info": {
		"_postman_id": "d1160316-34b6-4c96-80e4-80858b05fca4",
		"name": "PSnF_Schedules",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22861454",
		"_collection_link": "https://martian-eclipse-381947.postman.co/workspace/VCNG-automation~60598d72-d6bf-4ec8-9ccc-e86c28b839db/collection/22861454-d1160316-34b6-4c96-80e4-80858b05fca4?action=share&creator=22861454&source=collection_link"
	},
	"item": [
		{
			"name": "Get Schedule invalid sortColumn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Invalid value for parameter sortAsc. It should not be null or empty if sortColumn is provided.\",\r",
							"    \"Invalid value for parameter sortColumn. name column sort type is NoSort and does not support sorting.\"\r",
							"    ]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Scehdule with sortAsc empty\", function() {\r",
							"    for(let i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=name",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "name"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sortAsc empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid value for parameter sortAsc. It should not be null or empty if sortColumn is provided.\"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Scehdule with sortAsc empty\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sortAsc true",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=true",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sortAsc false",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sortAsc invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid value for parameter sortAsc. It should be either true or false.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Scehdule with sortAsc invlaid\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=fals",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "fals"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sortAsc offset empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sortAsc offset non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"offset property is not numeric: a\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Scehdule with non Numeric offset\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=a",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "a"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sortAsc offset negative Value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"offset property value cannot be negative.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Scehdule with negative Value offset\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=-1",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "-1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule with offset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule with limit empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule with limit non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"limit property is not numeric: a\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Scehdule with non Numeric limit\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=a",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "a"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule with limit negative Value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"limit property value cannot be negative.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Scehdule with negative Value limit\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=-1",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "-1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule with limit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=4",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=4",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=2&limit=4",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=enabled&sortAsc=false&offset=2&limit=4",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "enabled"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=nextRun&sortAsc=false&offset=2&limit=4",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "nextRun"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastStarted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=lastStarted&sortAsc=false&offset=2&limit=4",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "lastStarted"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=lastRunResult&sortAsc=false&offset=2&limit=4",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "lastRunResult"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter starts with Battery",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-1%22,%20%22value1%22:%22Battery%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-1%22,%20%22value1%22:%22Battery%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter starts with empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort displayName filter starts with empty\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-1%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-1%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter starts with Invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort displayName filter starts with Invalid\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-1%22,%20%22value1%22:%22xyz%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-1%22,%20%22value1%22:%22xyz%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter ends with Load Job",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-2%22,%20%22value1%22:%22Load Job%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-2%22,%20%22value1%22:%22Load Job%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter ends with empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort displayName filter ends with empty\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-2%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-2%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter ends with Invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort displayName filter ends with Invalid\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-2%22,%20%22value1%22:%22xyz%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-2%22,%20%22value1%22:%22xyz%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter contains Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-3%22,%20%22value1%22:%22Check%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-3%22,%20%22value1%22:%22Check%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter contains empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort displayName filter contains empty\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-3%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-3%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter contains Invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort displayName filter contains Invalid\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=2&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-3%22,%20%22value1%22:%22xyz%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "2"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-3%22,%20%22value1%22:%22xyz%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter equal to System Data Job",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-4%22,%20%22value1%22:%22System Data Job%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-4%22,%20%22value1%22:%22System Data Job%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter equal to empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort displayName filter equal to empty\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-4%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-4%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort displayName filter equal to Invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort displayName filter equal to Invalid\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=displayName&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-4%22,%20%22value1%22:%22xyz%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "displayName"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-301%22,%20%22operandId%22:%22-4%22,%20%22value1%22:%22xyz%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter equal to 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort type filter equal to 0\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter equal to 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort type filter equal to 1\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter equal to 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter equal to 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort type filter equal to 3\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter equal to -1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value -1 for operand type: 3. It should be greater than or equal to 0. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort type filter equal to -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter equal to empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value null for operand type: 3. It should be numeric. Cannot be filtered.\"]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort type filter equal to empty\", function() {\r",
							"    for(i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter equal to non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value null for operand type: 3. It should be numeric. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort type filter equal to non Numeric\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter not equal to 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter not equal to 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter not equal to 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Get Schedule sort type filter not equal to 2\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter not equal to 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter  not equal to -1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value -1 for operand type: 3. It should be greater than or equal to 0. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort type filter not equal to -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter  not equal to empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value null for operand type: 3. It should be numeric. Cannot be filtered.\"]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort type filter not equal to empty\", function() {\r",
							"    for(i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort type filter  not equal to non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value null for operand type: 3. It should be numeric. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort type filter not equal to non Numeric\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-302%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled filter equal to 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 0 for operand type: 4. It should be either true or false. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"ValidateGet Schedule sort enabled filter equal to 0\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-41%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-41%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled filter equal to true",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-41%22,%20%22value1%22:%22true%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-41%22,%20%22value1%22:%22true%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled filter equal to false",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-41%22,%20%22value1%22:%22false%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-41%22,%20%22value1%22:%22false%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled filter equal to empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value  for operand type: 4. It should be either true or false. Cannot be filtered.\"\r",
							"    ]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort enabled filter equal to empty\", function() {\r",
							"    for(let i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-41%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-41%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled filter equal to invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value xyz for operand type: 4. It should be either true or false. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Get Schedule sort enabled filter equal to invalid\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-41%22,%20%22value1%22:%22xyz%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-41%22,%20%22value1%22:%22xyz%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled filter not equal to 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 0 for operand type: 4. It should be either true or false. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort enabled filter not equal to 0\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-42%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-42%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled filter  not equal to true",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-42%22,%20%22value1%22:%22true%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-42%22,%20%22value1%22:%22true%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled filter not equal to false",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-42%22,%20%22value1%22:%22false%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-42%22,%20%22value1%22:%22false%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled filter not equal to empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value  for operand type: 4. It should be either true or false. Cannot be filtered.\"\r",
							"    ]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort enabled filter not equal to empty\", function() {\r",
							"    for(let i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-42%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-42%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort enabled filter not equal to invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value a for operand type: 4. It should be either true or false. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort enabled filter not equal to invalid\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-42%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-303%22,%20%22operandId%22:%22-42%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 0 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within 0\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within 7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%227%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%227%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within 8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%228%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%228%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within 9",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 9 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within 9\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%229%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%229%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within -1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value -1 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value null for operand type: 2. It should be numeric. Cannot be filtered.\"\r",
							"    ]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within empty\", function() {\r",
							"    for( i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter within non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value null for operand type: 2. It should be numeric. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 0 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within 7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter not within 7\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%227%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%227%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within 8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%228%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%228%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within 9",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 9 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within 9\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%229%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%229%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within -1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value -1 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within 9\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value null for operand type: 2. It should be numeric. Cannot be filtered.\"\r",
							"    ]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter not within empty\", function() {\r",
							"    for( i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not within non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value null for operand type: 2. It should be numeric. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not Value empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value  for operand type: 2. It should be no.value. Cannot be filtered.\"\r",
							"    ]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter not Value empty\", function() {\r",
							"    for( i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not Value 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 0 for operand type: 2. It should be no.value. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not Value non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value a for operand type: 2. It should be no.value. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort nextRun filter not Value no.value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter not Value no.value\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22no.value%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-304%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22no.value%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 0 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to 7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%227%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%227%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to 8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%228%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%228%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to 9",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 9 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal to 9\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%229%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%229%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to -1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value -1 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal to -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value null for operand type: 2. It should be numeric. Cannot be filtered.\"\r",
							"    ]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal to empty\", function() {\r",
							"    for( i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter within to non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value null for operand type: 2. It should be numeric. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort nextRun filter within non Numeric\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-23%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 0 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not within to 0\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not within to 6\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to 7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not within to 7\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%227%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%227%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to 8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%228%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%228%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to 9",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 9 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not within to 9\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%229%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%229%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to -1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value -1 for operand type: 2. It should be between 1 and 8. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not within to -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not within to non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value null for operand type: 2. It should be numeric. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not within to non Numeric\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-22%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not Value empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value  for operand type: 2. It should be no.value. Cannot be filtered.\"\r",
							"    ]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not Value 0\", function() {\r",
							"    for( i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not Value 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value 0 for operand type: 2. It should be no.value. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not Value 0\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not Value non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value a for operand type: 2. It should be no.value. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not Value non Numeric\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not Value no.value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22no.value%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-305%22,%20%22operandId%22:%22-21%22,%20%22value1%22:%22no.value%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter equal 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal 0\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter equal 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter equal 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal 2\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter equal 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal 3\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter equal 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal 4\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter equal 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal 5\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter equal 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal 6\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter equal -1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value -1 for operand type: 3. It should be greater than or equal to 0. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter equal non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value null for operand type: 3. It should be numeric. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter equal empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value null for operand type: 3. It should be numeric. Cannot be filtered.\"\r",
							"    ]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter equal empty\", function() {\r",
							"    for( i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-31%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not equal 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%220%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not equal 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = \"No data to display.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not equal 1\", function() {\r",
							"    pm.expect(jsonData.response.success.msg).eql(successMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%221%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not equal 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%222%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not equal 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%223%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not equal 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%224%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not equal 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%225%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not equal 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const filterObject = pm.environment.get(\"filterProperty\")\r",
							"var results = jsonData.response.dataObjects.length\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"if (results > \"0\")\r",
							"        {\r",
							"            pm.test(\"Validate Many Results Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects[0]).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"           \r",
							"        else\r",
							"        {\r",
							"            pm.test(\"Validate one Result Success Message\", function()\r",
							"            {\r",
							"            pm.expect(jsonData.response.dataObjects).to.have.property(filterObject)\r",
							"            })\r",
							"        }\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%226%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not equal -1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value -1 for operand type: 3. It should be greater than or equal to 0. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not equal -1\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22-1%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not equal non Numeric",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Invalid filter value null for operand type: 3. It should be numeric. Cannot be filtered.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not equal non Numeric\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22a%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Schedule sort lastRunResult filter not equal empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = [\"Empty value for parameter value1 in submittedFilterCriterion. A value must be entered to be filtered.\",\r",
							"    \"Invalid filter value null for operand type: 3. It should be numeric. Cannot be filtered.\"\r",
							"    ]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Get Schedule sort lastRunResult filter not equal empty\", function() {\r",
							"    for( i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/schedule/data?siteId=&sortColumn=type&sortAsc=false&offset=0&limit=4&submittedFilterCriterion=%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"schedule",
						"data"
					],
					"query": [
						{
							"key": "siteId",
							"value": ""
						},
						{
							"key": "sortColumn",
							"value": "type"
						},
						{
							"key": "sortAsc",
							"value": "false"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "4"
						},
						{
							"key": "submittedFilterCriterion",
							"value": "%7B%20%22columnId%22:%22-306%22,%20%22operandId%22:%22-32%22,%20%22value1%22:%22%22,%20%22value2%22:%22%22%7D"
						}
					]
				}
			},
			"response": []
		}
	]
}