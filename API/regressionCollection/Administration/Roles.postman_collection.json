{
	"info": {
		"_postman_id": "81721097-b85e-40bf-b77b-5f488af87b43",
		"name": "Roles",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14803454"
	},
	"item": [
		{
			"name": "Fletch One Role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"var id = -3\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('Fletch One Role', function () {\r",
							"    pm.expect(jsonData.response.dataObjects.id).eql(id)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "",
						"value": "",
						"type": "default",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/role/-3",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role",
						"-3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch One Role InvalidId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Role with id 0 cannot be found.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test('Fetch One Role InvalidId', function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/role/0",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch One Role Non Numeric ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Role with id 100 cannot be found.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Fetch One Role Non Numeric ID\", function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/role/100",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch One Role Not Exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Role with id 100 cannot be found.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Fetch One Role Not Exists, function\", function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "default"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/role/100",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var number = Math.random()\r",
							"\r",
							"pm.collectionVariables.set(\"roleName\", \"Tester\" + number)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Create Role\", function() {\r",
							"    pm.expect(jsonData.response.dataObjects.name).eql(pm.collectionVariables.get(\"roleName\"))\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"roleID\", jsonData.response.dataObjects.id)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"name\": {{roleName}},\r\n    \"description\": \"My new role\",\r\n    \"features\": [\r\n         {\r\n          \"id\": -3200\r\n         },\r\n         {\r\n          \"id\": -3104\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role Existing Role",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage= \"A role named \" + pm.collectionVariables.get(\"roleName\") + \" already exists.\"\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Create Role Existing Role\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"name\": {{roleName}},\r\n    \"description\": \"My new role\",\r\n    \"features\": [\r\n         {\r\n          \"id\": -3200\r\n         },\r\n         {\r\n          \"id\": -3104\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Role Change Name & Description Unexisiting Role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Role with id 0 cannot be found.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test('Update Role Change Name & Description Unexisiting Role', function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"id\" : 0,\r\n    \"name\": \"My Unexisting Role\",\r\n    \"description\": \"My new updated role\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Role Change Name missing Role ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"id property cannot be null or empty.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test('Update Role Change Name missing Role ID', function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"name\": \"Missing Role ID\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Role Change Name & Description",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const nameResponse = pm.collectionVariables.get(\"roleNameUpdated\")\r",
							"const descriptionMessage = \"My new updated role\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test('Update Role Change Name & Description', function () {\r",
							"    pm.expect(jsonData.response.dataObjects.name).eql(nameResponse)\r",
							"    pm.expect(jsonData.response.dataObjects.description).eql(descriptionMessage)\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var number = Math.random()\r",
							"\r",
							"pm.collectionVariables.set(\"roleNameUpdated\", \"QA\" + number)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"id\" : {{roleID}},\r\n    \"name\": {{roleNameUpdated}},\r\n    \"description\": \"My new updated role\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Role Change Name with an existing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"A Role with name Administrator already exists.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"pm.test(\"Has property errors\", function () {\r",
							"    pm.expect(jsonData.response).to.have.property(\"errors\")\r",
							"})\r",
							"pm.test(\"Has correct error message\", function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"id\" : {{roleID}},\r\n    \"name\": \"Administrator\",\r\n    \"description\": \"My new updated role\"\r\n  }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Role Add Feature",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const featuresID = [-3200, -3104, -2603]\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Update Role Add Feature\", function () {\r",
							"    for( let i = 0 ; i < featuresID.length ; i++) {\r",
							"        pm.expect(jsonData.response.dataObjects.features[i][\"id\"]).oneOf(featuresID)\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"id\" : {{roleID}},\r\n    \"name\": {{roleNameUpdated}},\r\n    \"features\": [\r\n        {\r\n         \"id\": -3200\r\n        },\r\n        {\r\n          \"id\": -3104\r\n        },\r\n        {\r\n          \"id\": -2603\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Role add Invalid Feature",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errrorMessage = \"Feature:id property is not numeric: a\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test('Update Role Change Name with an existing', function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errrorMessage)\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"id\" : {{roleID}},\r\n    \"name\": {{roleNameUpdated}},\r\n    \"features\": [\r\n        {\r\n         \"id\": -3200\r\n        },\r\n        {\r\n          \"id\": \"a\"\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Role Remove Feature",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const nonFeatureID = -2603\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Update Role Remove Feature\", function () {\r",
							"    pm.expect(jsonData.response.dataObjects.features.id).not.eql(nonFeatureID)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n      \"id\" : {{roleID}},\r\n    \"name\": {{roleNameUpdated}},\r\n    \"features\": [\r\n        {\r\n         \"id\": -3200\r\n        },\r\n        {\r\n          \"id\": -3104\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Role Remove All Features",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Update Role Remove All Features\", function () {\r",
							"    pm.expect(jsonData.response.dataObjects).not.have.property(\"features\")\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n      \"id\" : {{roleID}},\r\n    \"name\": {{roleNameUpdated}},\r\n    \"features\": [\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Role NoNumeric ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"id property cannot be null or empty.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"UpdateRole NoNumeric ID\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"id\": \"a\",\r\n    \"name\": \"{{roleNameUpdated}}\",\r\n    \"description\": \"My new updated role\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role?id=bad&",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					],
					"query": [
						{
							"key": "id",
							"value": "bad"
						},
						{
							"key": "",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"var Role_ID = pm.collectionVariables.get(\"roleID\")\r",
							"const deleteMessage = \"Role \" + Role_ID + \" was deleted.\" \r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Delete one Role\", function () {\r",
							"    pm.expect(jsonData.response.success.msg).eql(deleteMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}admin/role?ids={{roleID}}",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					],
					"query": [
						{
							"key": "ids",
							"value": "{{roleID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role without Features",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Role must contain at least one feature.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Create Role without Features\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"name\": {{roleName}},\r\n    \"description\": \"My new role\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role with multiple errors",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage= [\"name property cannot be null or empty.\",\r",
							"        \"Role must contain at least one feature.\"]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Create Role with multiple errors\", function() {\r",
							"    for(let i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role with invalid feature ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Feature with id 1234 cannot be found.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Create Role with invalid feature ID\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"name\": \"Role with Invalid Feature\",\r\n    \"description\": \"My new role\",\r\n    \"features\": [\r\n         {\r\n          \"id\": -3200\r\n         },\r\n         {\r\n          \"id\": 1234\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role with non Numeric feature ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Feature:id property is not numeric: a\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Create Role with non Numeric feature ID\", function() {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"name\": {{roleName}},\r\n    \"description\": \"My new role\",\r\n    \"features\": [\r\n         {\r\n          \"id\": -3200\r\n         },\r\n         {\r\n          \"id\": \"a\"\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role Missing Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"name property cannot be null or empty.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Create Role Missing Name\", function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"description\": \"My new role\",\r\n    \"features\": [\r\n         {\r\n          \"id\": -3200\r\n         }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role/?id=12",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role",
						""
					],
					"query": [
						{
							"key": "id",
							"value": "12"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role Empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessages = [\"name property cannot be null or empty.\",\r",
							"                      \"Role must contain at least one feature.\"]\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Create Empty\", function () {\r",
							"    for (let i = 0 ; i < errorMessages.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessages[i])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "default"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role/?id=12",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role",
						""
					],
					"query": [
						{
							"key": "id",
							"value": "12"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role (Multiple I)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var number = Math.random()\r",
							"\r",
							"pm.collectionVariables.set(\"roleName\", \"Tester\" + number)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Verify New Role Created\", function() {\r",
							"    pm.expect(jsonData.response.dataObjects.name).eql(pm.collectionVariables.get(\"roleName\"))\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"roleID\", jsonData.response.dataObjects.id)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"name\": {{roleName}},\r\n    \"description\": \"My new role\",\r\n    \"features\": [\r\n         {\r\n          \"id\": -3200\r\n         },\r\n         {\r\n          \"id\": -3104\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role (Multiple II)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var number = Math.random()\r",
							"\r",
							"pm.collectionVariables.set(\"roleNameUpdated\", \"QA\" + number)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Verify New Role Created\", function() {\r",
							"    pm.expect(jsonData.response.dataObjects.name).eql(pm.collectionVariables.get(\"roleNameUpdated\"))\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"newRoleID\", jsonData.response.dataObjects.id)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"name\": {{roleNameUpdated}},\r\n    \"description\": \"My new role\",\r\n    \"features\": [\r\n         {\r\n          \"id\": -3200\r\n         },\r\n         {\r\n          \"id\": -3104\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Multiple Roles with Errors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"var RoleID1 = pm.collectionVariables.get(\"roleID\")\r",
							"var RoleID2 = pm.collectionVariables.get(\"newRoleID\")\r",
							"const errorMessage = [\"id property is not numeric: bad\",\r",
							"    \"id property is not numeric: anotherbad\",\r",
							"    \"Role with id 140000 cannot be found.\"]\r",
							"const responseMessage = [RoleID1, RoleID2]\r",
							"\r",
							" \r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test('Validate Delete Response with multiple Errors', function () {\r",
							"    for(let i = 0 ; i < errorMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.errors[i][\"msg\"]).eql(errorMessage[i])\r",
							"    }\r",
							"    for(let j = 0 ; j < responseMessage ; j++) {\r",
							"        pm.expect(jsonData.response.success[j][\"msg\"]).eql(responseMessage[j])\r",
							"    }\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/role?ids={{roleID}},bad,{{newRoleID}},anotherbad,140000",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					],
					"query": [
						{
							"key": "ids",
							"value": "{{roleID}},bad,{{newRoleID}},anotherbad,140000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Fletch Deleted Role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"var RoleID = pm.collectionVariables.get(\"roleID\")\r",
							"const errorMessage = \"Role with id \" + RoleID + \" cannot be found.\"\r",
							"\r",
							"pm.test(\"Status code is400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test('Verify Error Message to get Role Deleted', function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "default"
					},
					{
						"key": "",
						"value": "",
						"type": "default",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/role/{{roleID}}",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role",
						"{{roleID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role for User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var number = Math.random()\r",
							"\r",
							"pm.collectionVariables.set(\"roleNameUpdated\", \"QA\" + number)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Verify New Role Created\", function() {\r",
							"    pm.expect(jsonData.response.dataObjects.name).eql(pm.collectionVariables.get(\"roleNameUpdated\"))\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"newRoleID\", jsonData.response.dataObjects.id)\r",
							"pm.collectionVariables.set(\"roleNameUpdated\", jsonData.response.dataObjects.name)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"name\": {{roleNameUpdated}},\r\n    \"description\": \"My new role\",\r\n    \"features\": [\r\n         {\r\n          \"id\": -3200\r\n         },\r\n         {\r\n          \"id\": -3104\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var number = Math.random()\r",
							"\r",
							"pm.collectionVariables.set(\"emailAddress\", \"QA\" + number + \"@honeywell.com\")\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"userID\", jsonData.response.dataObjects.id)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user\": {\r\n        \"emailAddress\": {{emailAddress}},\r\n        \"name\": \"User for Role\",\r\n        \"password\": \"Test12345!\",\r\n        \"roles\": {\r\n            \"id\": {{newRoleID}},\r\n            \"name\": {{roleNameUpdated}}\r\n        },\r\n        \"enabled\": false,\r\n        \"notes\": \"\",\r\n        \"lastLoginTime\": \"2023-03-23T14:29:16.195Z\",\r\n        \"allSitesAccess\": true\r\n    }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/user",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Role in use",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Unable to delete role. It is referenced elsewhere in the system.\"\r",
							"\r",
							"pm.test(\"Status code is 500\", function () {\r",
							"    pm.response.to.have.status(500)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate Error Message to delete Role Already in use\", function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role?ids={{newRoleID}}",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					],
					"query": [
						{
							"key": "ids",
							"value": "{{newRoleID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Administrator Role",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"You are not allowed to delete the Administrator role.\"\r",
							"\r",
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate IDs error Message\", function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role?ids=-1",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					],
					"query": [
						{
							"key": "ids",
							"value": "-1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Role Missing ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"id property cannot be null or empty.\"\r",
							"\r",
							"pm.test(\"Status code is 00\", function () {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate IDs error Message\", function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role?ids=",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					],
					"query": [
						{
							"key": "ids",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Role non Numeric ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"id property is not numeric: a\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate ID Error\", function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/role?ids=a",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					],
					"query": [
						{
							"key": "ids",
							"value": "a"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Role Invalid ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const errorMessage = \"Role with id 0 cannot be found.\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validate ID Error\", function () {\r",
							"    pm.expect(jsonData.response.errors.msg).eql(errorMessage)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/role?ids=0",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					],
					"query": [
						{
							"key": "ids",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/user?ids={{userID}}",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"user"
					],
					"query": [
						{
							"key": "ids",
							"value": "{{userID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Role (Multiple III)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var number = Math.random()\r",
							"\r",
							"pm.collectionVariables.set(\"roleName\", \"Tester\" + number)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"var number = Math.random()\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Verify New Role Created\", function() {\r",
							"    pm.expect(jsonData.response.dataObjects.name).eql(pm.collectionVariables.get(\"roleName\"))\r",
							"})\r",
							"\r",
							"pm.collectionVariables.set(\"roleID\", jsonData.response.dataObjects.id)\r",
							"pm.collectionVariables.set(\"roleName\", \"Tester\" + number)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"role\": {\r\n    \"name\": {{roleName}},\r\n    \"description\": \"My new role\",\r\n    \"features\": [\r\n         {\r\n          \"id\": -3200\r\n         },\r\n         {\r\n          \"id\": -3104\r\n        }\r\n    ]\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}admin/role",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Multiple Roles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"const successMessage = [\"Role \" + pm.collectionVariables.get(\"roleID\") + \" was deleted.\",\r",
							"                        \"Role \" + pm.collectionVariables.get(\"newRoleID\") + \" was deleted.\"]\r",
							"\r",
							" \r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test('Validate Delete Multiple Roles', function () {\r",
							"    for(let i = 0 ; i < successMessage.length ; i++) {\r",
							"        pm.expect(jsonData.response.success[i][\"msg\"]).eql(successMessage[i])\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "default",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}admin/role?ids={{roleID}},{{newRoleID}}",
					"host": [
						"{{baseURL}}admin"
					],
					"path": [
						"role"
					],
					"query": [
						{
							"key": "ids",
							"value": "{{roleID}},{{newRoleID}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "roleName",
			"value": "Tester",
			"type": "string"
		},
		{
			"key": "roleNameUpdated",
			"value": "QA",
			"type": "string"
		},
		{
			"key": "roleID",
			"value": "",
			"type": "string"
		},
		{
			"key": "newRoleID",
			"value": "",
			"type": "string"
		},
		{
			"key": "userName",
			"value": "tester",
			"type": "string"
		},
		{
			"key": "emailAddress",
			"value": "",
			"type": "string"
		},
		{
			"key": "userID",
			"value": "",
			"type": "string"
		}
	]
}